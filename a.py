# -*- coding: utf-8 -*-
"""a.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_e8QC_pE-htFgSn6aJBeQ12kXRGAv40A
"""

#네이버 api와 주소에서 위도, 경도를 이용하기 위한 라이브러리 설치
!pip install PyNaver
!pip install geopy

import pandas as pd
import folium
import webbrowser
import json
import requests
from geopy.geocoders import Nominatim
from geopy.distance import geodesic
from folium.plugins import MarkerCluster
from folium.plugins import MiniMap

#데이터로 이용할 csv파일 확인 및 최소화
file = '서울시 공중화장실 위치정보.csv'
orgdata = pd.read_csv(file, encoding = 'cp949')

orgdata=orgdata.rename(columns={'WSG84X좌표':'경도','WSG84Y좌표':'위도'})

for i in range(len(orgdata)):
    
    lat = orgdata.loc[i, '위도']
    long = orgdata.loc[i, '경도']
    region = orgdata.loc[i, '대명칭']
    
orgdata.head()

dir_client_id = 'xsnyon27l3'
dir_client_secret = '1IwY2M3lxQN2rBV4z5JfS4nOqaTFL2vJWIPZspqT'

url = f'https://naveropenapi.apigw.ntruss.com/map-direction/v1/driving'

start = ''
goal =  ''
headers = {'X-NCP-APIGW-API-KEY-ID':dir_client_id, 'X-NCP-APIGW-API-KEY': dir_client_secret}

#원하는 주소 입력
from geopy.geocoders import Nominatim

def geocoding(address):
    geolocoder = Nominatim(user_agent = 'South Korea', timeout=None)
    geo = geolocoder.geocode(address)
    crd = {"lat": str(geo.latitude), "lng": str(geo.longitude)}

    return crd
user =  input('주소를 입력하세요.')
crd = geocoding(user)
print(crd['lat'])
print(crd['lng'])

#data에서 필요한 속성만 가져오기
data = orgdata[['대명칭', '위도', '경도']]

mycrd = (crd['lat'],crd['lng'])
dist=[]
for n in data.index:
    t_loc = (data.loc[n, '위도'],data.loc[n, '경도'])     
    #print(geodesic(mycrd,t_loc).kilometers)
    dist.append(geodesic(mycrd,t_loc).kilometers)
dist[:10]
data['거리']=dist
data

# 7. 사용자 주소와 가장 가까운 공중화장실 상위 10곳 구하기
neardata = data.sort_values(by=['거리']).head(10)

neardata['위도'].mean(), neardata['경도'].mean()

# 8. 지도 준비
w_map = folium.Map(location=[neardata['위도'].mean(), neardata['경도'].mean()], zoom_start=14)

# 9. 사용자 주소와 상위 10곳의 공중화장실 마커 올리기
folium.Marker([crd['lat'], crd['lng']], 
    icon=folium.Icon(color='red', icon='glyphicon glyphicon-home')).add_to(w_map)

nearlist=[]
# 10. 지도에 popup을 이용해 마커를 클릭시 해당 마커에 대명칭을 표시
for n in neardata.index:
    folium.Marker([neardata.loc[n, '위도'], neardata.loc[n, '경도']],
                  popup = neardata.loc[n, '대명칭'],
                           icon=folium.Icon(color='blue',icon='flag'
                 ,prefix='fa')).add_to(w_map)
  
    nearlist.append([neardata.loc[n, '위도'], neardata.loc[n, '경도']])
#folium.PolyLine(locations=(crd['lat'], crd['lng']),tooltip='Polyline').add_to(w_map)

w_map

#네이버 api id
#x-ncp-apigw-api-key-id:{xsnyon2713}
#x-ncp-apigw-api-key:{1IwY2M3lxQN2rBV4z5JfS4nOqaTFL2vJWIPZspqT}

neardata
mycrd
from PyNaver import NaverCloudPlatform
client_id = "xsnyon27l3"
client_secret = "1IwY2M3lxQN2rBV4z5JfS4nOqaTFL2vJWIPZspqT"

# 네이버 API 인스턴스 생성
ncp = NaverCloudPlatform(client_id, client_secret)
#start = "127.1115061,37.3864539"
#goal = "127.01953476,37.5160802"
start = f"{mycrd[0]},{mycrd[1]}"
goal = f"{nearlist[0]},{nearlist[1]}"
# 실행
res = ncp.directions15(start=start, goal=goal, )
res

from google.colab import drive
drive.mount('/content/drive')

from selenium import webdriver
from selenium.webdriver.common.keys import Keys


driver = webdriver.Chrome('chromedriver')
driver.get('https://map.naver.com/v5/directions/-/-/-/?c=14139078.9231079,4509745.6215210,15,0,0,0,dh')
#네이버 길찾기 주소

driver.find_element_by_xpath('//*[@id="intro_popup_close"]/span').click()

delay = 3
driver.implicitly_wait(delay) # 3초 기달림 


driver.find_element_by_id('directionStart').send_keys('잠실역')
driver.find_element_by_id("directionStart").send_keys(Keys.RETURN) # 엔터 

driver.find_element_by_xpath('//*[@id="container"]/div[1]/shrinkable-layout/directions-layout/directions-result/directions-search-list/search-list/search-list-contents/perfect-scrollbar/div/div[1]/div/div/div/search-item-place/div').click()


driver.find_element_by_id('directionGoal').send_keys('신사역')
driver.find_element_by_id('directionGoal').send_keys(Keys.RETURN)

try :
    #driver.find_element_by_xpath('//*[@id="container"]/div[1]/shrinkable-layout/directions-layout/directions-result/div/directions-search/div[2]/button[2]').click()
    driver.find_element_by_class_name('btn.btn_direction.active').click()
except:
    print('1')

import os
#주소를 위도, 경도로 변환
def get_apikey(key_name, json_filename):
    BASE_DIR = Path(__file__).resolve().parent.parent # == os.path.dirname(os.path.abspath(__file__))
    json_filepath = os.path.join(BASE_DIR, json_filename)
    # print(json_filepath)
    if(not os.path.isfile(json_filepath)):
        print("JSON File Not Found")
        raise FileNotFoundError

    with open(json_filepath) as f:
        json_p = json.loads(f.read())
        # print("json_p:  ", json_p)

    try:
        value=json_p[key_name]
        return value
    except KeyError:
        error_msg = "ERROR: Unvalid Key"
        return error_msg

def getlatlng_naver(addr):
    key_id = get_apikey('xsnyon2713', json_filename="secret.json")
    key = get_apikey('1IwY2M3lxQN2rBV4z5JfS4nOqaTFL2vJWIPZspqT', json_filename="secret.json")
    headers = {'xsnyon2713':key_id,
               '1IwY2M3lxQN2rBV4z5JfS4nOqaTFL2vJWIPZspqT':key}
    url = 'https://naveropenapi.apigw.ntruss.com/map-geocode/v2/geocode?query='+addr
    result = json.loads(str(requests.get(url=url, headers=headers).text))
    try:
        addr_info_lon = result['addresses'][0]['x']
        addr_info_lat = result['addresses'][0]['y']
    except IndexError:  # match값이 없을때
        print("IndexError발생, 해당 주소에 맞는 위도 경도 없음, idx: ",idx, "번째, 주소정보: ", addr)
        raise IndexError
    except TypeError:  # match값이 2개이상일때
        print("TypeError발생, 해당 주소에 맞는 위도 경도값 2개 이상, idx: ",idx, "번째, 주소정보: ", addr)
        raise TypeError
    return addr_info_lon, addr_info_lat